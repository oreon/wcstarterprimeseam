package com.univeris.cxp.scoringstrategy;

import java.util.List;

import org.jboss.seam.annotations.Name;

import com.univeris.cxp.questionnaire.Answer;
import com.univeris.cxp.questionnaire.AnswerType;
import com.univeris.cxp.questionnaire.AnsweredQuestion;
import com.univeris.cxp.questionnaire.AnsweredQuestionnaire;
import com.univeris.cxp.questionnaire.QuestionnaireMappingEntry;
import com.univeris.cxp.questionnaire.StrategyOutcome;

/**
 * This file is an Entity Class generated by Witchcraftmda.
 * DO NOT MODIFY any changes will be overwritten with the next run of the code generator.
 */
@Name("clientScoringMethod")
public class ClientScoringMethod extends ClientScoringMethodBase
		implements
			java.io.Serializable {
	private static final long serialVersionUID = -484973605L;
	
	
	@Override
	protected Integer doScore(AnsweredQuestionnaire answeredQuesionnaire) {
		
		List<AnsweredQuestion> aqs = answeredQuesionnaire.getAnsweredQuestions();
		
		int score  = 0;
		
		for (AnsweredQuestion answeredQuestion : aqs) {
			
			if(answeredQuestion.getQuestion().getAnswerType() == AnswerType.MULTIPLE){
				List<Answer> answers = answeredQuestion.getAnswers();
				if(answers != null)
					for (Answer answer : answers) {
						score += answer.getScore();
					}
								 
			}else
				if(answeredQuestion.getAnswer() != null)
					score += answeredQuestion.getAnswer().getScore();
		}
		
		answeredQuesionnaire.setDefaultScore(score);
		
		
		return score;
		
	}
	
	
	public StrategyOutcome findStrategy(AnsweredQuestionnaire answeredQuesionnaire){
		Integer score = answeredQuesionnaire.getDefaultScore();
		
		for (QuestionnaireMappingEntry questionnaireMappingEntry : answeredQuesionnaire.getQuestionnaire().getQuestionnaireMappingEntrys()) {
			if(score <=  questionnaireMappingEntry.getMax() && score >= questionnaireMappingEntry.getMin() )
				return questionnaireMappingEntry.getOutcome();
				
		}
		
		//fallback
		return StrategyOutcome.VERY_CONSERVATIVE;
	}
}
